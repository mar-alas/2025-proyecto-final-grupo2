name: Deploy Backend
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
   deploy_to_gke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Revisando si el mensaje del commit dice 'CD'
        if: contains(github.event.head_commit.message, 'CD')
        run: echo "El mensaje del commit contiene CD, iniciando el despliegue."
      - name: Autenticacion a GCP
        if: contains(github.event.head_commit.message, 'CD')
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Configurar Cloud SDK
        if: contains(github.event.head_commit.message, 'CD')
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: proyecto-final-2-454403
      - name: Configurar Docker para usar gcloud credential helper
        if: contains(github.event.head_commit.message, 'CD')
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: Configurar GKE Credentials
        if: contains(github.event.head_commit.message, 'CD')
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: prod-cluster-cpp-api
          location: us-central1-f
          project_id: proyecto-final-2-454403
      - name: Build y Push de las imagenes de Docker
        if: contains(github.event.head_commit.message, 'CD')
        working-directory: backend
        run: |
          chmod +x scripts/manejo_imagenes/construir_todas_las_imagenes.sh
          ./scripts/manejo_imagenes/construir_todas_las_imagenes.sh
      - name: Publicar las imagenes de Docker a GCP
        if: contains(github.event.head_commit.message, 'CD')
        run: |-
          docker push us-central1-docker.pkg.dev/proyecto-final-2-454403/repositorio-imagenes-docker/logistica_servicio/generador_reportes:latest
          docker push us-central1-docker.pkg.dev/proyecto-final-2-454403/repositorio-imagenes-docker/logistica_servicio/gestor_entregas:latest
          docker push us-central1-docker.pkg.dev/proyecto-final-2-454403/repositorio-imagenes-docker/ventas_servicio/generador_reportes:latest
          docker push us-central1-docker.pkg.dev/proyecto-final-2-454403/repositorio-imagenes-docker/ventas_servicio/procesador_video:latest
      - name: Despliegue a GKE
        if: contains(github.event.head_commit.message, 'CD')
        working-directory: backend/scripts/manejo_imagenes
        run: |
          kubectl apply -f ../../k8s/compras_servicio_db_deployment.yaml
          kubectl apply -f ../../k8s/compras_servicio_db_service.yaml
          kubectl apply -f ../../k8s/logistica_servicio_db_deployment.yaml
          kubectl apply -f ../../k8s/logistica_servicio_db_service.yaml
          kubectl apply -f ../../k8s/seguridad_servicio_db_deployment.yaml
          kubectl apply -f ../../k8s/seguridad_servicio_db_service.yaml
          kubectl apply -f ../../k8s/ventas_servicio_db_deployment.yaml
          kubectl apply -f ../../k8s/ventas_servicio_db_service.yaml
          kubectl apply -f ../../k8s/inventario_servicio_db_deployment.yaml
          kubectl apply -f ../../k8s/inventario_servicio_db_service.yaml
          kubectl apply -f ../../k8s/pulsar_deployment.yaml
          kubectl apply -f ../../k8s/pulsar_service.yaml
          kubectl apply -f ../../k8s/generador_reportes_logistica_deployment.yaml
          kubectl apply -f ../../k8s/generador_reportes_logistica_service.yaml
          kubectl apply -f ../../k8s/generador_reportes_ventas_deployment.yaml
          kubectl apply -f ../../k8s/generador_reportes_ventas_service.yaml
          kubectl apply -f ../../k8s/gestor_rutas_entrega_deployment.yaml
          kubectl apply -f ../../k8s/gestor_rutas_entrega_service.yaml
          kubectl apply -f ../../k8s/gestor_entregas_deployment.yaml
          kubectl apply -f ../../k8s/gestor_entregas_service.yaml
          kubectl apply -f ../../k8s/procesador_video_deployment.yaml
          kubectl apply -f ../../k8s/procesador_video_service.yaml
          kubectl apply -f ../../k8s/ingress.yaml
          kubectl get pods
